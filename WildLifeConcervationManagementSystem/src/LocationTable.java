
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mws_a
 */
public class LocationTable extends javax.swing.JFrame {

    /**
     * Creates new form LocationTable
     */
    public LocationTable() {
        initComponents();
        populateElephantLocationTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_title = new javax.swing.JLabel();
        scr_pnl_elephant_migration_table = new javax.swing.JScrollPane();
        tbl_elephant_migration = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(null);

        lbl_title.setBackground(new java.awt.Color(33, 37, 31));
        lbl_title.setFont(new java.awt.Font("Segoe UI Black", 1, 20)); // NOI18N
        lbl_title.setForeground(new java.awt.Color(248, 249, 250));
        lbl_title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.png"))); // NOI18N
        lbl_title.setText("Elephant Migration Table");
        lbl_title.setOpaque(true);
        jPanel1.add(lbl_title);
        lbl_title.setBounds(0, 0, 810, 100);

        tbl_elephant_migration.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tbl_elephant_migration.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Elephant", "Geographi Coordinates", "Time"
            }
        ));
        tbl_elephant_migration.setRowHeight(18);
        tbl_elephant_migration.setRowMargin(2);
        tbl_elephant_migration.setSelectionBackground(new java.awt.Color(33, 37, 41));
        tbl_elephant_migration.setSelectionForeground(new java.awt.Color(248, 249, 250));
        scr_pnl_elephant_migration_table.setViewportView(tbl_elephant_migration);

        jPanel1.add(scr_pnl_elephant_migration_table);
        scr_pnl_elephant_migration_table.setBounds(10, 160, 790, 370);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LocationTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LocationTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LocationTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LocationTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LocationTable().setVisible(true);
            }
        });
    }
    
    private void populateElephantLocationTable () {
        try {
                   Class.forName("com.mysql.cj.jdbc.Driver"); 
                   Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
                   String sql = "SELECT id, geographic_coordinates, time, elephant FROM elephantlocation";

                   PreparedStatement pst = conn.prepareStatement(sql);
//                   pst.setString(1, getWpa());
   //                pst.setString(2, String.valueOf(txt_password.getText()));
                   ResultSet rs = pst.executeQuery();

                   while (rs.next()) {

                       String id = rs.getString("id");
                       String geographic_coordinates = rs.getString("geographic_coordinates");
                       String time = rs.getString("time");
                       String elephant = rs.getString("elephant");
                       
                       String elephant_location_table_raw[] = {id, elephant, geographic_coordinates, time};
                       DefaultTableModel migration_table = (DefaultTableModel)tbl_elephant_migration.getModel();
                       migration_table.addRow(elephant_location_table_raw);

                   } 
                   conn.close();
           } catch (Exception e) {
               System.out.println("Failiure: " + e);
           }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JScrollPane scr_pnl_elephant_migration_table;
    private javax.swing.JTable tbl_elephant_migration;
    // End of variables declaration//GEN-END:variables
}
