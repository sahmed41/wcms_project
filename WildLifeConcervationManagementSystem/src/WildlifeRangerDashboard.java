
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mws_a
 */
public class WildlifeRangerDashboard extends javax.swing.JFrame {

    /**
     * Creates new form WildlifeRangerDashboard
     */
//    User properties necessary for login
    private String id;
    private String username;
    private String password;
    private String role;
    private String wpa;
    private WildlifeRanger wr;
    
    public WildlifeRangerDashboard(String id, String username, String password, String role) {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setId(id);
        this.setRole(role);
//        lbl_id.setText(this.getId());
        lbl_username.setText(this.getUsername());
//        lbl_role.setText(this.getRole());
        setWr(initiateWildlifeRanger());
        lbl_wpa.setText(this.getWpa());
        populateElephantTable();
        populateHabitatTable();
        populatePersonalInformation();
        lbl_welcome_message.setText("Welcome " + getWr().getFirst_name() + " " + getWr().getLast_name());
        displayTotalElephantPopulation();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btn_logout = new javax.swing.JButton();
        lbl_title = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        scr_pn_elephant = new javax.swing.JScrollPane();
        tbl_elephant = new javax.swing.JTable();
        btn_add_elephant = new javax.swing.JButton();
        btn_alter_elephant = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        scr_pn_habitat = new javax.swing.JScrollPane();
        tbl_habitat = new javax.swing.JTable();
        btn_alter_habitat = new javax.swing.JButton();
        btn_add_habitat = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btn_add_elephant_location = new javax.swing.JButton();
        btn_alter_elephant_location = new javax.swing.JButton();
        btn_view_migration = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btn_add_elephant_population = new javax.swing.JButton();
        btn_calculate_population = new javax.swing.JButton();
        btn_alter_elephant_population = new javax.swing.JButton();
        btn_view_population = new javax.swing.JButton();
        pnl_personal_info = new javax.swing.JPanel();
        lbl_first_name = new javax.swing.JLabel();
        lbl_last_name = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_nic = new javax.swing.JLabel();
        lbl_dob = new javax.swing.JLabel();
        lbl_wpa = new javax.swing.JLabel();
        lbl_personal_info_title = new javax.swing.JLabel();
        lbl_email1 = new javax.swing.JLabel();
        lbl_welcome_message = new javax.swing.JLabel();
        pnl_total_elephant_population = new javax.swing.JPanel();
        lbl_total_elephant_population_title = new javax.swing.JLabel();
        lbl_total_elephant_population = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(248, 249, 250));
        jPanel1.setMinimumSize(new java.awt.Dimension(1312, 1200));
        jPanel1.setLayout(null);

        jButton1.setBackground(new java.awt.Color(248, 249, 250));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(33, 37, 41));
        jButton1.setText("Settings");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1370, 30, 150, 50);

        btn_logout.setBackground(new java.awt.Color(248, 249, 250));
        btn_logout.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_logout.setForeground(new java.awt.Color(33, 37, 41));
        btn_logout.setText("Logout");
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });
        jPanel1.add(btn_logout);
        btn_logout.setBounds(1200, 30, 150, 50);

        lbl_title.setBackground(new java.awt.Color(33, 37, 41));
        lbl_title.setFont(new java.awt.Font("Segoe UI Black", 1, 20)); // NOI18N
        lbl_title.setForeground(new java.awt.Color(248, 249, 250));
        lbl_title.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.png"))); // NOI18N
        lbl_title.setText("Wildlife Ranger Dashboard");
        lbl_title.setOpaque(true);
        jPanel1.add(lbl_title);
        lbl_title.setBounds(-8, 0, 1570, 100);

        jPanel2.setBackground(new java.awt.Color(248, 249, 250));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elephant Operations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 16), new java.awt.Color(33, 37, 41))); // NOI18N

        tbl_elephant.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tbl_elephant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Chicp Number", "Name", "Gender", "Height", "Weight", "Habitat", "Registered Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_elephant.setGridColor(new java.awt.Color(33, 37, 41));
        tbl_elephant.setRowHeight(18);
        tbl_elephant.setRowMargin(2);
        tbl_elephant.setSelectionBackground(new java.awt.Color(33, 37, 41));
        tbl_elephant.setSelectionForeground(new java.awt.Color(248, 249, 250));
        scr_pn_elephant.setViewportView(tbl_elephant);

        btn_add_elephant.setBackground(new java.awt.Color(33, 37, 41));
        btn_add_elephant.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_add_elephant.setForeground(new java.awt.Color(248, 249, 250));
        btn_add_elephant.setText("Add Elephant");
        btn_add_elephant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_elephantActionPerformed(evt);
            }
        });

        btn_alter_elephant.setBackground(new java.awt.Color(33, 37, 41));
        btn_alter_elephant.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_alter_elephant.setForeground(new java.awt.Color(248, 249, 250));
        btn_alter_elephant.setText("Alter Elephant");
        btn_alter_elephant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alter_elephantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scr_pn_elephant, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_alter_elephant, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_add_elephant, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add_elephant, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_alter_elephant, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scr_pn_elephant, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(500, 430, 1030, 350);

        jPanel3.setBackground(new java.awt.Color(248, 249, 250));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Habitat Operations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 16), new java.awt.Color(33, 37, 41))); // NOI18N

        tbl_habitat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tbl_habitat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Location", "Registered Date"
            }
        ));
        tbl_habitat.setGridColor(new java.awt.Color(33, 37, 41));
        tbl_habitat.setRowHeight(18);
        tbl_habitat.setRowMargin(2);
        tbl_habitat.setSelectionBackground(new java.awt.Color(33, 37, 41));
        tbl_habitat.setSelectionForeground(new java.awt.Color(248, 249, 250));
        scr_pn_habitat.setViewportView(tbl_habitat);

        btn_alter_habitat.setBackground(new java.awt.Color(33, 37, 41));
        btn_alter_habitat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_alter_habitat.setForeground(new java.awt.Color(248, 249, 250));
        btn_alter_habitat.setText("Alter Habitat");
        btn_alter_habitat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alter_habitatActionPerformed(evt);
            }
        });

        btn_add_habitat.setBackground(new java.awt.Color(33, 37, 41));
        btn_add_habitat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_add_habitat.setForeground(new java.awt.Color(248, 249, 250));
        btn_add_habitat.setText("Add Habitat");
        btn_add_habitat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_habitatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_alter_habitat, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_add_habitat)
                .addGap(18, 18, 18))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scr_pn_habitat, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add_habitat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_alter_habitat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scr_pn_habitat, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(980, 120, 550, 310);

        jPanel4.setBackground(new java.awt.Color(248, 249, 250));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elephant Migration Operation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 16), new java.awt.Color(33, 37, 41))); // NOI18N

        btn_add_elephant_location.setBackground(new java.awt.Color(33, 37, 41));
        btn_add_elephant_location.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_add_elephant_location.setForeground(new java.awt.Color(248, 249, 250));
        btn_add_elephant_location.setText("Add Elephant Location");
        btn_add_elephant_location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_elephant_locationActionPerformed(evt);
            }
        });

        btn_alter_elephant_location.setBackground(new java.awt.Color(33, 37, 41));
        btn_alter_elephant_location.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_alter_elephant_location.setForeground(new java.awt.Color(248, 249, 250));
        btn_alter_elephant_location.setText("Alter Elephant Location");
        btn_alter_elephant_location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alter_elephant_locationActionPerformed(evt);
            }
        });

        btn_view_migration.setBackground(new java.awt.Color(33, 37, 41));
        btn_view_migration.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_view_migration.setForeground(new java.awt.Color(248, 249, 250));
        btn_view_migration.setText("View Migration");
        btn_view_migration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_view_migrationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_alter_elephant_location, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btn_add_elephant_location, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btn_view_migration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_add_elephant_location)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_alter_elephant_location)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_view_migration)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(440, 130, 250, 170);

        jPanel5.setBackground(new java.awt.Color(248, 249, 250));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elephant Population Operations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 16), new java.awt.Color(33, 37, 41))); // NOI18N

        btn_add_elephant_population.setBackground(new java.awt.Color(33, 37, 41));
        btn_add_elephant_population.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_add_elephant_population.setForeground(new java.awt.Color(248, 249, 250));
        btn_add_elephant_population.setText("Add Elephant Population");
        btn_add_elephant_population.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_elephant_populationActionPerformed(evt);
            }
        });

        btn_calculate_population.setBackground(new java.awt.Color(33, 37, 41));
        btn_calculate_population.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_calculate_population.setForeground(new java.awt.Color(248, 249, 250));
        btn_calculate_population.setText("Calculate Population");
        btn_calculate_population.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calculate_populationActionPerformed(evt);
            }
        });

        btn_alter_elephant_population.setBackground(new java.awt.Color(33, 37, 41));
        btn_alter_elephant_population.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_alter_elephant_population.setForeground(new java.awt.Color(248, 249, 250));
        btn_alter_elephant_population.setText("Alter Elephant Population");
        btn_alter_elephant_population.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alter_elephant_populationActionPerformed(evt);
            }
        });

        btn_view_population.setBackground(new java.awt.Color(33, 37, 41));
        btn_view_population.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_view_population.setForeground(new java.awt.Color(248, 249, 250));
        btn_view_population.setText("View Population");
        btn_view_population.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_view_populationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_calculate_population, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_alter_elephant_population, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btn_add_elephant_population, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btn_view_population, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_add_elephant_population, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_alter_elephant_population, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_calculate_population, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_view_population)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(710, 130, 260, 230);

        pnl_personal_info.setBackground(new java.awt.Color(33, 37, 41));

        lbl_first_name.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_first_name.setForeground(new java.awt.Color(248, 249, 250));
        lbl_first_name.setText("FIrst Nam");

        lbl_last_name.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_last_name.setForeground(new java.awt.Color(248, 249, 250));
        lbl_last_name.setText("Last Name");

        lbl_username.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_username.setForeground(new java.awt.Color(248, 249, 250));
        lbl_username.setText("Username");

        lbl_nic.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_nic.setForeground(new java.awt.Color(248, 249, 250));
        lbl_nic.setText("NIC");

        lbl_dob.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_dob.setForeground(new java.awt.Color(248, 249, 250));
        lbl_dob.setText("Date of Birth");

        lbl_wpa.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_wpa.setForeground(new java.awt.Color(248, 249, 250));
        lbl_wpa.setText("WPA");

        lbl_personal_info_title.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbl_personal_info_title.setForeground(new java.awt.Color(248, 249, 250));
        lbl_personal_info_title.setText("Your Information");

        lbl_email1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_email1.setForeground(new java.awt.Color(248, 249, 250));
        lbl_email1.setText("Email");

        javax.swing.GroupLayout pnl_personal_infoLayout = new javax.swing.GroupLayout(pnl_personal_info);
        pnl_personal_info.setLayout(pnl_personal_infoLayout);
        pnl_personal_infoLayout.setHorizontalGroup(
            pnl_personal_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_personal_infoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_personal_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_personal_info_title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_first_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_last_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_wpa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_personal_infoLayout.createSequentialGroup()
                        .addComponent(lbl_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addComponent(lbl_email1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnl_personal_infoLayout.setVerticalGroup(
            pnl_personal_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_personal_infoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbl_personal_info_title, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_first_name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_last_name, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_username, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_email1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(lbl_wpa, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(pnl_personal_info);
        pnl_personal_info.setBounds(20, 150, 290, 460);

        lbl_welcome_message.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbl_welcome_message.setText("Welcome Message");
        jPanel1.add(lbl_welcome_message);
        lbl_welcome_message.setBounds(20, 110, 380, 30);

        pnl_total_elephant_population.setBackground(new java.awt.Color(33, 37, 41));

        lbl_total_elephant_population_title.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbl_total_elephant_population_title.setForeground(new java.awt.Color(248, 249, 250));
        lbl_total_elephant_population_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_total_elephant_population_title.setText("Total Elephant Population");

        lbl_total_elephant_population.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_total_elephant_population.setForeground(new java.awt.Color(248, 249, 250));
        lbl_total_elephant_population.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_total_elephant_population.setText("00");

        javax.swing.GroupLayout pnl_total_elephant_populationLayout = new javax.swing.GroupLayout(pnl_total_elephant_population);
        pnl_total_elephant_population.setLayout(pnl_total_elephant_populationLayout);
        pnl_total_elephant_populationLayout.setHorizontalGroup(
            pnl_total_elephant_populationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_total_elephant_populationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_total_elephant_populationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_total_elephant_populationLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbl_total_elephant_population, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(53, Short.MAX_VALUE))
                    .addGroup(pnl_total_elephant_populationLayout.createSequentialGroup()
                        .addComponent(lbl_total_elephant_population_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pnl_total_elephant_populationLayout.setVerticalGroup(
            pnl_total_elephant_populationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_total_elephant_populationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_total_elephant_population_title, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_total_elephant_population, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(pnl_total_elephant_population);
        pnl_total_elephant_population.setBounds(20, 620, 290, 110);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1539, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_add_elephantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_elephantActionPerformed
        // TODO add your handling code here:
        ElephantAddForm eaf = new ElephantAddForm(getId(),getWpa(), getUsername(), getPassword());
        eaf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_add_elephantActionPerformed

    private void btn_alter_elephantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alter_elephantActionPerformed
        // TODO add your handling code here:
        ElephantAlterForm eaf = new ElephantAlterForm(getId(), getWpa(), getUsername(), getPassword());
        eaf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_alter_elephantActionPerformed

    private void btn_add_elephant_locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_elephant_locationActionPerformed
        // TODO add your handling code here:
        AddElephantLocationForm aelf = new AddElephantLocationForm(getId(), getWpa(), getUsername(), getPassword());
        aelf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_add_elephant_locationActionPerformed

    private void btn_alter_elephant_locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alter_elephant_locationActionPerformed
        // TODO add your handling code here:
        AlterElephantLocationForm aelf = new AlterElephantLocationForm(getId(), getWpa(), getUsername(), getPassword());
        aelf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_alter_elephant_locationActionPerformed

    private void btn_calculate_populationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calculate_populationActionPerformed
        // TODO add your handling code here:
        int elephant_population = 0;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql = "SELECT id FROM habitat WHERE wpa = ?;";
//            SELECT COUNT(CustomerID) As elephantpopulation FROM Customers WHERE CustomerID = '1';

            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, getWpa());
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String sql_elephant = "SELECT id FROM elephant WHERE habitat = ?;";
                PreparedStatement pst_elephant = conn.prepareStatement(sql_elephant);
                pst_elephant.setString(1, rs.getString("id"));
                ResultSet rs_elephant = pst_elephant.executeQuery();
//                lbl_username.setText(rs.getString("username"));
////                Getting wpa of this ranger
//                String sql_wpa = "SELECT wpa FROM wildliferanger WHERE user = ?";
//                PreparedStatement pst_wpa = conn.prepareStatement(sql_wpa);
//                pst_wpa.setString(1, wr.getId());
//                ResultSet rs_wpa = pst_wpa.executeQuery();
//                
//                if (rs_wpa.next()) {
//                    setWpa(rs_wpa.getString("wpa"));
//                }
                while (rs_elephant.next()) {
//                    System.out.println("Elephant ID: " + rs_elephant.getString("id"));
                    elephant_population++;
                }
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure: " + e);
        }
//        System.out.println("Elephant population: " + elephant_population);
//        System.out.println("WPA: " + getWpa());
        
        getWr().addElephantPopulation(elephant_population, getWpa());
        JOptionPane.showMessageDialog(this, "Elephant population is added successfully");
        
//        CurretElephantPopulation.instentiateCurrentElephantPopulation().getTotalElephantPopulation();
        lbl_total_elephant_population.setText(String.valueOf(CurretElephantPopulation.instentiateCurrentElephantPopulation().getTotalElephantPopulation()));
        
    }//GEN-LAST:event_btn_calculate_populationActionPerformed

    private void btn_add_habitatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_habitatActionPerformed
        // TODO add your handling code here:
        HabitatAddForm haf = new HabitatAddForm(getId(), getWpa(), getUsername(), getPassword());
        haf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_add_habitatActionPerformed

    private void btn_alter_habitatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alter_habitatActionPerformed
        // TODO add your handling code here:
        HabitatAlterForm haf = new HabitatAlterForm(getId(), getWpa(), getUsername(), getPassword());
        haf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_alter_habitatActionPerformed

    private void btn_add_elephant_populationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_elephant_populationActionPerformed
        // TODO add your handling code here:
        AddElephantPopulation aepf = new AddElephantPopulation(getId(), getWpa(), getUsername(), getPassword());
        aepf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_add_elephant_populationActionPerformed

    private void btn_alter_elephant_populationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alter_elephant_populationActionPerformed
        // TODO add your handling code here:
        AlterElephantPopulation aep = new AlterElephantPopulation(getId(), getWpa(), getUsername(), getPassword());
        aep.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_alter_elephant_populationActionPerformed

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        // TODO add your handling code here:
        WildlifeRangerLogin lp = new WildlifeRangerLogin(getId());
        lp.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PersonalInformationChangeForm picf = new PersonalInformationChangeForm(getId(), getRole());
        picf.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_view_populationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_view_populationActionPerformed
        // TODO add your handling code here:
        PopulationTable pt = new PopulationTable(getWpa());
        pt.setVisible(true);
    }//GEN-LAST:event_btn_view_populationActionPerformed

    private void btn_view_migrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_view_migrationActionPerformed
        // TODO add your handling code here:
        LocationTable lt = new LocationTable();
        lt.setVisible(true);
    }//GEN-LAST:event_btn_view_migrationActionPerformed

    /**
     * @param args the command line arguments
     */
    
//    Setters
    
    public void setWr(WildlifeRanger wr) {
        this.wr = wr;
    }

    public void setId(String id) {
        this.id = id;
    }

    
    public void setUsername(String username) {
        this.username = username;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    public void setRole(String role) {
        this.role = role;
    }

    public void setWpa(String wpa) {
        this.wpa = wpa;
    }
    
    
    
    
//    Getters

    public WildlifeRanger getWr() {
        return wr;
    }
    
    
    
    public String getId() {
        return id;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }
    
    public String getRole() {
        return role;
    }

    public String getWpa() {
        return wpa;
    }
    
    
    
    public WildlifeRanger initiateWildlifeRanger() {
        WildlifeRanger wr = new WildlifeRanger();
        wr.setId(getId());
//        Getting wildlife ranger information from the db and setting it up here
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql = "SELECT first_name, last_name, address, nic, dob, email, username, password FROM user WHERE id = ?";

            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, wr.getId());
//                pst.setString(2, String.valueOf(txt_password.getText()));
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                
                wr.setFirst_name(rs.getString("first_name"));
                wr.setLast_name(rs.getString("last_name"));
                wr.setUsername(rs.getString("username"));
                wr.setAddress(rs.getString("address"));
//                Setting up date format
                String dob = rs.getString("dob"); 
                int dob_year = Integer.parseInt(dob.substring(0,4));
                int dob_month = Integer.parseInt(dob.substring(5,7));
                int dob_day = Integer.parseInt(dob.substring(8));
//                --------------------------------------
                wr.setDate_of_birth(LocalDate.of(dob_year, dob_month, dob_day));
                wr.setEmail(rs.getString("email"));
                wr.setNic(rs.getString("nic"));
                wr.setPassword(rs.getString("address"));
                setUsername(rs.getString("username"));
                setPassword(rs.getString("password"));
                
//                Getting wpa of this ranger
                String sql_wpa = "SELECT urrn, wpa FROM wildliferanger WHERE user = ?";
                PreparedStatement pst_wpa = conn.prepareStatement(sql_wpa);
                pst_wpa.setString(1, wr.getId());
                ResultSet rs_wpa = pst_wpa.executeQuery();
                
                if (rs_wpa.next()) {
                    setWpa(rs_wpa.getString("wpa"));
                    wr.setWpa(rs_wpa.getString("wpa"));
                    wr.setUrrn(rs_wpa.getString("urrn"));
                }
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure: " + e);
        }
        
        return wr;
    }
    
    private void populateElephantTable () {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql = "SELECT id FROM habitat WHERE wpa = ?";

            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, getWpa());
            ResultSet rs = pst.executeQuery();
            System.out.println("WPA: " + getWpa());

            while (rs.next()) {
                String sql_elephant = "SELECT id, picture, chip_number, name, gender, height, weight, habitat, status, registered_date FROM elephant WHERE habitat = ?";
                PreparedStatement pst_elephant = conn.prepareStatement(sql_elephant);
                pst_elephant.setString(1, rs.getString("id"));                
                ResultSet rs_elephant= pst_elephant.executeQuery();
                System.out.println("Habitat: " + rs.getString("id"));
                
                while (rs_elephant.next()) {
                    String id = rs_elephant.getString("id");
                    String chipnumber = rs_elephant.getString("chip_number");
                    String name = rs_elephant.getString("name");
                    String gender = rs_elephant.getString("gender");
                    String height = rs_elephant.getString("height");
                    String weight = rs_elephant.getString("weight");
                    String habitat = rs_elephant.getString("habitat");
                    String status = rs_elephant.getString("status");
                    String registered_date = rs_elephant.getString("registered_date");

                    String elephant_info[] = {id, chipnumber, name, gender, height, weight, habitat, registered_date };
                    
                    DefaultTableModel elephant_table = (DefaultTableModel)tbl_elephant.getModel();
                    if (status.equals("Alive")) {
                        elephant_table.addRow(elephant_info);
                    }
                }
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure: " + e);
        }
        
    }
    
    private void populateHabitatTable() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql = "SELECT id, location, wpa, registered_date FROM habitat WHERE wpa = ?";

            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, getWpa());
            ResultSet rs = pst.executeQuery();
            System.out.println("WPA: " + getWpa());

            while (rs.next()) {
//                String sql_elephant = "SELECT id, location, wpa, registered_date FROM habitat WHERE wpa = ?";
//                PreparedStatement pst_elephant = conn.prepareStatement(sql_elephant);
//                pst_elephant.setString(1, getWpa());                
//                ResultSet rs_elephant= pst_elephant.executeQuery();
//                System.out.println("Habitat: " + rs.getString("id"));
//                
//                while (rs_elephant.next()) {
//                    
//                }
                    String id = rs.getString("id");
                    String location = rs.getString("location");
                    String registered_date = rs.getString("registered_date");

                    String habitat_info[] = {id, location, registered_date };
                    
                    DefaultTableModel habitat_table = (DefaultTableModel)tbl_habitat.getModel();
                    habitat_table.addRow(habitat_info);
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure: " + e);
        }
    }
    
    private void populatePersonalInformation () {        
        lbl_first_name.setText("First Name: " + getWr().getFirst_name());
        lbl_last_name.setText("Last Name: " + getWr().getLast_name());
        lbl_username.setText("Username: " + getWr().getUsername());
        lbl_email1.setText("Email: " + getWr().getEmail());
        lbl_nic.setText("NIC: " + getWr().getNic());
        lbl_dob.setText("Date of Birth: " + String.valueOf(getWr().getDate_of_birth()));
        lbl_wpa.setText("WPA: " + getWr().getWpa());
    }
    
    private void displayTotalElephantPopulation() {
        CurretElephantPopulation cep = CurretElephantPopulation.instentiateCurrentElephantPopulation();
        lbl_total_elephant_population.setText(String.valueOf(CurretElephantPopulation.getTotalElephantPopulation()));
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add_elephant;
    private javax.swing.JButton btn_add_elephant_location;
    private javax.swing.JButton btn_add_elephant_population;
    private javax.swing.JButton btn_add_habitat;
    private javax.swing.JButton btn_alter_elephant;
    private javax.swing.JButton btn_alter_elephant_location;
    private javax.swing.JButton btn_alter_elephant_population;
    private javax.swing.JButton btn_alter_habitat;
    private javax.swing.JButton btn_calculate_population;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_view_migration;
    private javax.swing.JButton btn_view_population;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lbl_dob;
    private javax.swing.JLabel lbl_email1;
    private javax.swing.JLabel lbl_first_name;
    private javax.swing.JLabel lbl_last_name;
    private javax.swing.JLabel lbl_nic;
    private javax.swing.JLabel lbl_personal_info_title;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JLabel lbl_total_elephant_population;
    private javax.swing.JLabel lbl_total_elephant_population_title;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JLabel lbl_welcome_message;
    private javax.swing.JLabel lbl_wpa;
    private javax.swing.JPanel pnl_personal_info;
    private javax.swing.JPanel pnl_total_elephant_population;
    private javax.swing.JScrollPane scr_pn_elephant;
    private javax.swing.JScrollPane scr_pn_habitat;
    private javax.swing.JTable tbl_elephant;
    private javax.swing.JTable tbl_habitat;
    // End of variables declaration//GEN-END:variables
}
