
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mws_a
 */
public class ChartTest extends javax.swing.JFrame {

    /**
     * Creates new form ChartTest
     */
    public ChartTest() {
        initComponents();
//        createChart("%");
//        System.out.println(getWpaNamebyId("1"));
        createPieChart("%");
        
//        getElephantMigrationPattern();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pnl_chart = new javax.swing.JPanel();
        btn_show_chart = new javax.swing.JButton();
        lbl_title = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pnl_pie_chart = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pnl_migration_graph = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnl_chart.setLayout(new javax.swing.BoxLayout(pnl_chart, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane1.setViewportView(pnl_chart);

        btn_show_chart.setText("Show Chart");
        btn_show_chart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_show_chartActionPerformed(evt);
            }
        });

        lbl_title.setText("jLabel1");

        pnl_pie_chart.setLayout(new javax.swing.BoxLayout(pnl_pie_chart, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane2.setViewportView(pnl_pie_chart);

        pnl_migration_graph.setLayout(new javax.swing.BoxLayout(pnl_migration_graph, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane3.setViewportView(pnl_migration_graph);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btn_show_chart)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_title, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(169, 169, 169))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lbl_title, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_show_chart)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_show_chartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_show_chartActionPerformed
        // TODO add your handling code here:
//        createChart();
    }//GEN-LAST:event_btn_show_chartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChartTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChartTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChartTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChartTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChartTest().setVisible(true);
            }
        });
    }

    private void createChart(String id) {
        String name = getWpaNamebyId(id);
        lbl_title.setText(name);
        DefaultCategoryDataset dod = new DefaultCategoryDataset();
//        dod.setValue(12, "Population1", "2019");
//        dod.setValue(7, "Population1", "2020");
//        dod.setValue(15, "Population1", "2021");
//        dod.setValue(13, "Population1", "2022");
//        
//        Retreiving data from database
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql = "SELECT SUM(population) AS total_p, date FROM elephantpopulation WHERE wpa LIKE ? GROUP BY date";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {                
                dod.setValue(rs.getInt("total_p"), "Population1", rs.getString("date"));
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure!" + e);
        }
        
//        ---------------------------------
        
        
        JFreeChart chart = ChartFactory.createBarChart("Elephant Population", "Year", "Population", dod, PlotOrientation.VERTICAL, true, true, false);
        
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        
//        ChartFrame chframe = new ChartFrame("Elephant Population", chart, true);
//        chframe.setVisible(true);
//        chframe.setSize(300,400);
        
        ChartPanel cp = new ChartPanel(chart);
        pnl_chart.removeAll();
        pnl_chart.add(cp);
        pnl_chart.updateUI();
                     
        
    }
    
    private void createPieChart (String id) {
        int m = 0;
        int f = 0;
        DefaultPieDataset dataset = new DefaultPieDataset( );
//        dataset.setValue( "IPhone 5s" , new Double( 20 ) );  
//        dataset.setValue( "SamSung Grand" , new Double( 20 ) );   
//        dataset.setValue( "MotoG" , new Double( 40 ) );    
//        dataset.setValue( "Nokia Lumia" , new Double( 10 ) ); 
        
//        Getting value from the database
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql_wpa = "SELECT wpa, id FROM habitat WHERE wpa Like ?";
            PreparedStatement pst_wpa = conn.prepareStatement(sql_wpa);
            pst_wpa.setString(1, id);
            ResultSet rs_wpa = pst_wpa.executeQuery();
            while (rs_wpa.next()) {
                String sql = "SELECT COUNT(id) AS total_g, gender FROM elephant WHERE habitat = ? GROUP BY gender";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, rs_wpa.getString("id"));
                ResultSet rs = pst.executeQuery();
                
                while (rs.next()) {
                    if (rs.getString("gender").equals("Male")) {
                        m += rs.getInt("total_g");
                    } else {
                        f += rs.getInt("total_g");                    
                    }
//                    System.out.println("DB Status: " + true);
                }
                
            
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure!" + e);
        }
//        System.out.println("Male: " + m);
//        System.out.println("Female: " + f);
        dataset.setValue("Male", new Integer (m));
        dataset.setValue("Female", new Integer (f));

//          --------------------------------
        
        JFreeChart chart = ChartFactory.createPieChart(      
         "Mobile Sales",   // chart title 
         dataset,          // data    
         true,             // include legend   
         true, 
         true);
        
//        JFreeChart chart1 = createChart(createDataset( ));
        PiePlot plot = (PiePlot)chart.getPlot();
//        plot.setRangeGridlinePaint(Color.black);
//        plot.setForegroundAlpha(TOP_ALIGNMENT);
        
//        ChartFrame chframe = new ChartFrame("Elephant Population", chart);
//        chframe.setVisible(true);
//        chframe.setSize(300,400);
        
        ChartPanel pc = new ChartPanel(chart);
        pnl_pie_chart.removeAll();
        pnl_pie_chart.add(pc);
        pnl_pie_chart.updateUI();
        
        
        
        
    
    }
    
    
    private void getElephantMigrationPattern () {
        DefaultCategoryDataset dod = new DefaultCategoryDataset();
//        dod.setValue(12, "Population1", "2019");
//        dod.setValue(7, "Population1", "2020");
//        dod.setValue(15, "Population1", "2021");
//        dod.setValue(13, "Population1", "2022");
//        
//        Retreiving data from database
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql = "SELECT geographic_coordinates, elephant FROM elephantlocation WHERE elephant = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, "7");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {  
                System.out.println("Test 1");
                String location[] = rs.getString("geographic_coordinates").split(",");
                String latitude = location[0].replaceAll("\\s", "");;
                String longitude = location[1].replaceAll("\\s", "");;
                System.out.println("Latitude:" + latitude);
                dod.setValue(Double.parseDouble(latitude), "Population1", longitude);
                System.out.println("Test 1");
//                dod.set
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure!" + e);
        }
        
//        ---------------------------------
        
        
        JFreeChart chart = ChartFactory.createLineChart("Elephant Migration", "Longitude", "Latitude", dod, PlotOrientation.VERTICAL, true, true, false);
        
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        
//        ChartFrame chframe = new ChartFrame("Elephant Population", chart, true);
//        chframe.setVisible(true);
//        chframe.setSize(300,400);
        
        ChartPanel cp = new ChartPanel(chart);
        pnl_migration_graph.removeAll();
        pnl_migration_graph.add(cp);
        pnl_migration_graph.updateUI();
    }
    
    private String getWpaNamebyId (String id) {
        String name = "none";
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/wcms","wcms","e3H$l5A@eN^p7T&");
            String sql = "SELECT name FROM wildlifeprotectedarea Where id Like ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {                
                name = rs.getString("name");
            } 
            conn.close();
        } catch (Exception e) {
            System.out.println("Failiure!" + e);
        }
        return name;
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_show_chart;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JPanel pnl_chart;
    private javax.swing.JPanel pnl_migration_graph;
    private javax.swing.JPanel pnl_pie_chart;
    // End of variables declaration//GEN-END:variables
}
